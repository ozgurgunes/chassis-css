//
// Button Class
//
.button {

  @extend %button, %button-medium, %solid-button, %component;
  // scss-docs-start button-css-vars
  --#{$prefix}border-width: var(--#{$prefix}button-border-width, #{$button-border-width});
  --#{$prefix}box-shadow: var(--#{$prefix}button-box-shadow, #{$button-box-shadow});
  --#{$prefix}focus-box-shadow: var(--#{$prefix}button-focus-box-shadow, #{$button-focus-box-shadow});
  --#{$prefix}transition: var(--#{$prefix}button-transition, $button-transition);
  // scss-docs-end button-css-vars

  box-sizing: content-box;
  display: inline-flex;
  gap: var(--#{$prefix}gap);
  align-items: center;
  justify-content: center;
  @include box-padding();
  text-align: center;
  text-decoration: if($link-decoration == none, null, none);
  white-space: $button-white-space;
  vertical-align: middle;
  cursor: if($enable-button-pointers, pointer, null);
  user-select: none;

  @include gradient-bg(var(--#{$prefix}bg-color));
  @include box-shadow(var(--#{$prefix}box-shadow));
  @include transition(var(--#{$prefix}transition));

  &.outline {
    @extend %outline-button;
  }

  &.smooth {
    @extend %smooth-button;
  }

  &.large {
    @extend %button-large;
  }

  &.small {
    @extend %button-small;
  }

  > .icon-start {
    margin-right: var(--#{$prefix}trim);
    margin-left: #{calc(-1 * var(--#{$prefix}trim))};
  }
  > .icon-end {
    margin-right: #{calc(-1 * var(--#{$prefix}trim))};
    margin-left: var(--#{$prefix}trim);
  }

  //
  // Link buttons
  //

  // Make a button look and behave like a link
  &.link {
    --#{$prefix}button-font-weight: #{$font-weight-normal};
    --#{$prefix}button-idle-fg-color: #{$button-link-color};
    --#{$prefix}button-idle-bg-color: transparent;
    --#{$prefix}button-idle-border-color: transparent;
    --#{$prefix}button-hover-fg-color: #{$button-hover-color};
    --#{$prefix}button-hover-bg-color: transparent;
    --#{$prefix}button-hover-border-color: transparent;
    --#{$prefix}button-press-fg-color: #{$button-hover-color};
    --#{$prefix}button-press-bg-color: transparent;
    --#{$prefix}button-press-border-color: transparent;
    --#{$prefix}button-disabled-fg-color: #{$fg-subtle};
    --#{$prefix}button-disabled-bg-color: transparent;
    --#{$prefix}button-disabled-border-color: transparent;
    --#{$prefix}box-shadow: 0 0 0 #000; // Can't use `none` as keyword negates all values when used with multiple shadows

    text-decoration: $link-decoration;
    @if $enable-component-gradients {
      background-image: none;
    }

    &:hover,
    &:focus-visible {
      text-decoration: $link-hover-decoration;
    }

    &:focus-visible {
      color: var(--#{$prefix}fg-color);
    }

  }

}
