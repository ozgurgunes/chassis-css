//
// Card Component
//
// This file implements a comprehensive card layout system with flexible structure and positioning.
// It provides a foundation for content containers with consistent spacing and organization.
//
// All cards support contextual color modifiers and can be combined with utility classes.
//

// Internal mixin for card elements padding that accounts for border width
// scss-docs-start _card-padding-box
@mixin _card-padding-box($comp: null, $padding-factor: 1) {
  @if $enable-padding-box {
    $border-width: var(--#{$prefix}border-width);
    $padding-modifier: #{calc(var(--#{$prefix}border-width) * $padding-factor)};
    $padding-y: #{calc(var(--#{$prefix}#{if($comp, "#{$comp}-", "")}padding-y) - #{$padding-modifier})};
    $padding-x: #{calc(var(--#{$prefix}#{if($comp, "#{$comp}-", "")}padding-x) - #{$border-width})};
    padding: $padding-y $padding-x;
  } @else {
    @include padding($comp);
  }
}
// scss-docs-end _card-padding-box

.card {
  // scss-docs-start card-css-vars
  --#{$prefix}padding-y: var(--#{$prefix}card-padding-y, #{$card-padding-y});
  --#{$prefix}padding-x: var(--#{$prefix}card-padding-x, #{$card-padding-x});
  --#{$prefix}header-padding-y: var(--#{$prefix}card-header-padding-y, #{$card-header-padding-y});
  --#{$prefix}header-padding-x: var(--#{$prefix}card-header-padding-x, #{$card-header-padding-x});
  --#{$prefix}footer-padding-y: var(--#{$prefix}card-footer-padding-y, #{$card-footer-padding-y});
  --#{$prefix}footer-padding-x: var(--#{$prefix}card-footer-padding-x, #{$card-footer-padding-x});
  --#{$prefix}gap-y: var(--#{$prefix}card-gap-y, #{$card-gap-y});
  --#{$prefix}gap-x: var(--#{$prefix}card-gap-x, #{$card-gap-x});

  --#{$prefix}border-width: var(--#{$prefix}card-border-width, #{$card-border-width});
  --#{$prefix}border-color: var(--#{$prefix}card-border-color, #{$card-border-color});
  --#{$prefix}border-radius: var(--#{$prefix}card-border-radius, #{$card-border-radius});
  --#{$prefix}inner-border-radius: var(--#{$prefix}card-inner-border-radius, #{$card-inner-border-radius});
  --#{$prefix}box-shadow: var(--#{$prefix}card-box-shadow, #{$card-box-shadow});

  --#{$prefix}header-fg-color: var(--#{$prefix}card-header-fg-collor, #{$card-header-fg-color});
  --#{$prefix}header-fg-color: var(--#{$prefix}card-header-fg-collor, #{$card-header-fg-color});
  --#{$prefix}header-bg-color: var(--#{$prefix}card-header-bg-color, #{$card-header-bg-color});
  --#{$prefix}fg-color: var(--#{$prefix}card-fg-color, #{$card-fg-color});
  --#{$prefix}bg-color: var(--#{$prefix}card-bg-color, #{$card-bg-color});
  --#{$prefix}title-fg-color: var(--#{$prefix}card-title-fg-color, #{$card-title-color});
  --#{$prefix}subtitle-fg-color: var(--#{$prefix}card-subtitle-fg-color, #{$card-subtitle-color});

  --#{$prefix}height: var(--#{$prefix}card-heading, #{$card-height});
  --#{$prefix}group-margin: var(--#{$prefix}card-group-margin, #{$card-group-margin});
  // scss-docs-end card-css-vars

  position: relative;
  display: flex;
  flex-direction: column;
  height: var(--#{$prefix}height);
  word-wrap: break-word;
  background-clip: border-box;
  @include box-shadow(var(--#{$prefix}box-shadow));

  @extend %component;

  &.large {
    --#{$prefix}card-padding-y: #{$card-large-padding-y};
    --#{$prefix}card-padding-x: #{$card-large-padding-x};
    --#{$prefix}card-header-padding-y: #{$card-large-header-padding-y};
    --#{$prefix}card-header-padding-x: #{$card-large-header-padding-x};
    --#{$prefix}card-footer-padding-y: #{$card-large-footer-padding-y};
    --#{$prefix}card-footer-padding-x: #{$card-large-footer-padding-x};
    --#{$prefix}card-gap-y: #{$card-large-gap-y};
    --#{$prefix}card-gap-x: #{$card-large-gap-x};

    .button:not(.small):not(.medium) {
      @extend %button-large;
    }

  }

  &.small {
    --#{$prefix}card-padding-y: #{$card-small-padding-y};
    --#{$prefix}card-padding-x: #{$card-small-padding-x};
    --#{$prefix}card-header-padding-y: #{$card-small-header-padding-y};
    --#{$prefix}card-header-padding-x: #{$card-small-header-padding-x};
    --#{$prefix}card-footer-padding-y: #{$card-small-footer-padding-y};
    --#{$prefix}card-footer-padding-x: #{$card-small-footer-padding-x};
    --#{$prefix}card-gap-y: #{$card-small-gap-y};
    --#{$prefix}card-gap-x: #{$card-small-gap-x};

    .button:not(.large):not(.medium) {
      @extend %button-small;
    }

  }

  > hr {
    margin-right: 0;
    margin-left: 0;
  }

  > .list-group {
    border-top: inherit;
    border-bottom: inherit;
    &.outline {
      border-top: var(--#{$prefix}border-width) solid var(--#{$prefix}border-color);
      border-bottom: var(--#{$prefix}border-width) solid var(--#{$prefix}border-color);
    }

    &:first-child {
      border-top-width: 0;
      @include border-top-radius(var(--#{$prefix}inner-border-radius));
    }

    &:last-child  {
      border-bottom-width: 0;
      @include border-bottom-radius(var(--#{$prefix}inner-border-radius));
    }
  }

  // Due to specificity of the above selector (`.card > .list-group`), we must
  // use a child selector here to prevent double borders.
  > .card-header + .list-group {
    border-top: 0;
  }
  > .list-group:has(+ .card-footer) {
    border-bottom: 0;
  }
}

.card-content {
  // Enable `flex-grow: 1` for decks and groups so that card blocks take up
  // as much space as possible, ensuring footers are aligned to the bottom.
  flex: 1 1 auto;
  @include _card-padding-box();

  &:has(.card-image:only-child):not(.row > [class*="col-"]) {
    flex-grow: 0;
    &:has(+ .card-content)  {
      padding-bottom: 0;
    }
    &:is(.card-content + &)  {
      padding-top: 0;
    }
  }

  &:has(.card-image:only-child):is(.row > [class*="col-"]) {
    &:has(+ .card-content[class*="col-"])  {
      padding-right: 0;
    }
    &:is(.card-content[class*="col-"] + &)  {
      padding-left: 0;
    }
  }

}

.card-title {
  margin-bottom: var(--#{$prefix}gap-y);
  color: var(--#{$prefix}card-title-fg-color);
  @if $card-title-font-extend-class {
    @extend .#{$card-title-font-extend-class};
    .card.large & {
      @extend .#{$card-title-font-extend-class}-large;
    }
    .card.small & {
      @extend .#{$card-title-font-extend-class}-small;
    }
  }
}

.card-subtitle {
  margin-bottom: var(--#{$prefix}gap-y);
  color: var(--#{$prefix}subtitle-fg-color);
  @if $card-subtitle-font-extend-class {
    @extend .#{$card-subtitle-font-extend-class};
    .card.large & {
      @extend .#{$card-subtitle-font-extend-class}-large;
    }
    .card.small & {
      @extend .#{$card-subtitle-font-extend-class}-small;
    }
  }
}

.card-title:has(+ .card-subtitle),
.card-subtitle:has(+ .card-title) {
  margin-bottom: 0;
}

.card-body {
  margin-bottom: var(--#{$prefix}padding-y);
  @if $card-body-font-extend-class {
    @extend .#{$card-body-font-extend-class};
    .card.large & {
      @extend .#{$card-body-font-extend-class}-large;
    }
    .card.small & {
      @extend .#{$card-body-font-extend-class}-small;
    }
  }
}

.card-body:last-child {
  margin-bottom: 0;
}

.card-link {
  &:hover {
    text-decoration: if($link-hover-decoration == underline, none, null);
  }

  + .card-link {
    margin-left: var(--#{$prefix}gap-x);
  }
}

//
// Optional textual headers
//

.card-header {
  // padding: var(--#{$prefix}header-padding-y) var(--#{$prefix}header-padding-x);
  //padding: #{calc(var(--#{$prefix}header-padding-y) - var(--#{$prefix}border-width))} #{calc(var(--#{$prefix}header-padding-x) - var(--#{$prefix}border-width))};
  @include _card-padding-box(header, .5);

  margin-bottom: 0; // Removes the default margin-bottom of <hN>
  color: var(--#{$prefix}header-fg-color);
  background-color: var(--#{$prefix}header-bg-color);
  border-bottom: var(--#{$prefix}border-width) solid var(--#{$prefix}border-color);

  &:first-child {
    @include border-radius(var(--#{$prefix}inner-border-radius) var(--#{$prefix}inner-border-radius) 0 0);
  }
}

.card-footer {
  // padding: var(--#{$prefix}header-padding-y) var(--#{$prefix}header-padding-x);
  // padding: #{calc(var(--#{$prefix}header-padding-y) - var(--#{$prefix}border-width))} #{calc(var(--#{$prefix}header-padding-x) - var(--#{$prefix}border-width))};
  @include _card-padding-box(footer, .5);
  color: var(--#{$prefix}header-fg-color);
  background-color: var(--#{$prefix}header-bg-color);
  border-top: var(--#{$prefix}border-width) solid var(--#{$prefix}border-color);

  &:last-child {
    @include border-radius(0 0 var(--#{$prefix}inner-border-radius) var(--#{$prefix}inner-border-radius));
  }
}


//
// Header navs
//

.card-header-tabs {
  margin-right: calc(-.5 * var(--#{$prefix}header-padding-x)); // stylelint-disable-line function-disallowed-list
  margin-bottom: calc(-1 * var(--#{$prefix}header-padding-y)); // stylelint-disable-line function-disallowed-list
  margin-left: calc(-.5 * var(--#{$prefix}header-padding-x)); // stylelint-disable-line function-disallowed-list
  border-bottom: 0;

  .nav-link.active {
    background-color: var(--#{$prefix}bg-color);
    border-bottom-color: var(--#{$prefix}bg-color);
  }
}

.card-header-pills {
  margin-right: calc(-.5 * var(--#{$prefix}header-padding-x)); // stylelint-disable-line function-disallowed-list
  margin-left: calc(-.5 * var(--#{$prefix}header-padding-x)); // stylelint-disable-line function-disallowed-list
}

// Card image
.card-overlay {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  padding: var(--#{$prefix}padding-y) var(--#{$prefix}padding-x);
  overflow: hidden;
  @include border-radius(var(--#{$prefix}inner-border-radius));
}

.card-image,
.card-image-top,
.card-image-bottom,
.card-image-start,
.card-image-end {
  width: 100%; // Required because we use flexbox and this inherently applies align-self: stretch
}

.card-image,
.card-image-top {
  @include border-top-radius(var(--#{$prefix}inner-border-radius));
}

.card-image,
.card-image-bottom {
  @include border-bottom-radius(var(--#{$prefix}inner-border-radius));
}

.card-image-start {
  @include border-start-radius(var(--#{$prefix}inner-border-radius));
}

.card-image-end {
  @include border-end-radius(var(--#{$prefix}inner-border-radius));
}


//
// Card groups
//

.card-group {
  // The child selector allows nested `.card` within `.card-group`
  // to display properly.
  > .card {
    margin-bottom: var(--#{$prefix}group-margin);
  }

  @include media-breakpoint-up(small) {
    display: flex;
    flex-flow: row wrap;
    // The child selector allows nested `.card` within `.card-group`
    // to display properly.
    > .card {
      // Flexbugs #4: https://github.com/philipwalton/flexbugs#flexbug-4
      flex: 1 0 0%;
      margin-bottom: 0;

      + .card {
        margin-left: 0;
        border-left: 0;
      }

      // Handle rounded corners
      @if $enable-rounded-borders {
        &:not(:last-child) {
          @include border-end-radius(0);

          .card-image-top,
          .card-header {
            // stylelint-disable-next-line property-disallowed-list
            border-top-right-radius: 0;
          }
          .card-image-bottom,
          .card-footer {
            // stylelint-disable-next-line property-disallowed-list
            border-bottom-right-radius: 0;
          }
        }

        &:not(:first-child) {
          @include border-start-radius(0);

          .card-image-top,
          .card-header {
            // stylelint-disable-next-line property-disallowed-list
            border-top-left-radius: 0;
          }
          .card-image-bottom,
          .card-footer {
            // stylelint-disable-next-line property-disallowed-list
            border-bottom-left-radius: 0;
          }
        }
      }
    }
  }
}
