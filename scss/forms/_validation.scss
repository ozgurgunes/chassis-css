.valid-feedback,
.invalid-feedback {
  @extend .form-text;
  display: none;
  width: 100%;
}

.valid-feedback {
  color: var(--#{$prefix}input-success-assist-color);
}
.invalid-feedback {
  color: var(--#{$prefix}input-error-assist-color);
}

.valid-tooltip,
.invalid-tooltip {
  position: absolute;
  top: 100%;
  z-index: 5;
  display: none;
  max-width: 100%; // Contain to parent when possible
  padding: $form-feedback-tooltip-padding-y $form-feedback-tooltip-padding-x;
  margin-top: .1rem;
  @include font-size($form-feedback-tooltip-font-size);
  @include line-height($form-feedback-tooltip-line-height);
  @include border-radius($form-feedback-tooltip-border-radius);
}

.valid-tooltip {
  color: $form-valid-tooltip-fg-color;
  background-color: $form-valid-tooltip-bg-color;
}

.invalid-tooltip {
  color: $form-invalid-tooltip-fg-color;
  background-color: $form-invalid-tooltip-bg-color;
}

.valid-feedback,
.valid-tooltip {
  #{if($form-validated-class, ".#{$form-validated-class} ", "")}:valid ~ &,
  .#{$form-valid-class} ~ & {
    display: block;
  }
}
.invalid-feedback,
.invalid-tooltip {
  #{if($form-validated-class, ".#{$form-validated-class} ", "")}:invalid ~ &,
  .#{$form-invalid-class} ~ & {
    display: block;
  }
}

%form-input {
  #{if($form-validated-class, ".#{$form-validated-class} ", "")}&:valid,
  .form-default &.#{$form-valid-class},
  &.#{$form-valid-class} {
    --#{$prefix}input-fg-color: var(--#{$prefix}input-success-fg-active);
    --#{$prefix}input-bg-color: var(--#{$prefix}input-success-bg-regular);
    --#{$prefix}input-border-color: var(--#{$prefix}input-success-border-color);
    --#{$prefix}input-box-shadow: #{$form-feedback-valid-box-shadow};

    @if $enable-validation-icons {
      --#{$prefix}feedback-icon: #{svg-color($input-feedback-valid-icon, $input-default-success-assist-color)};
      @if $enable-dark-mode {
        [data-cx-theme="dark"] &:not([data-cx-theme="dark"] [data-cx-theme="light"] &, &[data-cx-theme="light"]) {
          --#{$prefix}feedback-icon: #{svg-color($input-feedback-valid-icon, $input-default-success-assist-color, true)};
        }
      }
    }
  }

  #{if($form-validated-class, ".#{$form-validated-class} ", "")}&:invalid,
  &.#{$form-invalid-class} {
    --#{$prefix}input-fg-color: var(--#{$prefix}input-error-fg-active);
    --#{$prefix}input-bg-color: var(--#{$prefix}input-error-bg-regular);
    --#{$prefix}input-border-color: var(--#{$prefix}input-error-border-color);
    --#{$prefix}input-box-shadow: #{$form-feedback-invalid-box-shadow};

    @if $enable-validation-icons {
      --#{$prefix}feedback-icon: #{svg-color($input-feedback-invalid-icon, $input-default-error-assist-color)};
      @if $enable-dark-mode {
        [data-cx-theme="dark"] &:not([data-cx-theme="dark"] [data-cx-theme="light"] &, &[data-cx-theme="light"]) {
          --#{$prefix}feedback-icon: #{svg-color($input-feedback-invalid-icon, $input-default-error-assist-color, true)};
        }
      }
    }
  }
}

.form-floating > %form-input {
  #{if($form-validated-class, ".#{$form-validated-class} ", "")}&:valid,
  &.#{$form-valid-class} {
    ~ label {
      color: var(--#{$prefix}input-success-assist-color);
    }
  }

  #{if($form-validated-class, ".#{$form-validated-class} ", "")}&:invalid,
  &.#{$form-invalid-class} {
    ~ label {
      color: var(--#{$prefix}input-error-assist-color);
    }
  }
}


.option-input {
  #{if($form-validated-class, ".#{$form-validated-class} ", "")}&:valid,
  &.#{$form-valid-class} {
    --#{$prefix}input-bg-color: var(--#{$prefix}input-success-bg-regular);
    --#{$prefix}input-border-color: var(--#{$prefix}input-success-border-color);
    --#{$prefix}input-box-shadow: #{$form-feedback-valid-box-shadow};
    &:checked {
      --#{$prefix}input-bg-color: var(--#{$prefix}input-success-assist-color);
      --#{$prefix}input-border-color: var(--#{$prefix}input-success-border-color);
    }
    ~ .option-label {
      --#{$prefix}fg-color: var(--#{$prefix}input-success-assist-color);
    }
  }
  #{if($form-validated-class, ".#{$form-validated-class} ", "")}&:invalid,
  &.#{$form-invalid-class} {
    --#{$prefix}input-bg-color: var(--#{$prefix}input-error-bg-regular);
    --#{$prefix}input-border-color: var(--#{$prefix}input-error-border-color);
    --#{$prefix}input-box-shadow: #{$form-feedback-invalid-box-shadow};
    &:checked {
      --#{$prefix}input-bg-color: var(--#{$prefix}input-error-assist-color);
      --#{$prefix}input-border-color: var(--#{$prefix}input-error-border-color);
    }
    ~ .option-label {
      --#{$prefix}fg-color: var(--#{$prefix}input-error-assist-color);
    }
  }
}

@if $enable-validation-icons {
  @include form-validation-icons-selector(".form-control") {
    padding-right: $form-input-feedback-icon-padding-e;
    background-image: var(--#{$prefix}feedback-icon);
    background-repeat: no-repeat;
    background-position: $form-input-feedback-icon-position;
    background-size: $form-feedback-icon-size;
    &:is(textarea) {
      background-position: $form-textarea-feedback-icon-position;
    }
  }
  @include form-validation-icons-selector(".form-select") {
    &:not([multiple]):not([size]),
    &:not([multiple])[size="1"] {
      padding-right: $form-select-feedback-icon-padding-e;
      background-position: $form-select-caret-position, $form-select-feedback-icon-position;
      background-size: $form-feedback-icon-size;
    }
  }
  @include form-validation-icons-selector(".color-control") {
    &:not([multiple]):not([size]),
    &:not([multiple])[size="1"] {
      width: #{calc(var(--#{$prefix}input-color-width, var(--#{$prefix}min-height)) + $form-feedback-icon-size + var(--#{$prefix}padding-y) * 2)};
    }
  }

  .color-control {
    #{if($form-validated-class, ".#{$form-validated-class} ", "")}&:valid,
    #{if($form-validated-class, ".#{$form-validated-class} ", "")}&:invalid,
    &.#{$form-valid-class},
    &.#{$form-invalid-class} {
      width: #{calc(var(--#{$prefix}input-color-width, var(--#{$prefix}min-height)) + $form-feedback-icon-size + var(--#{$prefix}padding-y) * 2)};
    }
  }

  @if $enable-alternate-forms {
    // .form-alternate %form-input,
    .form-alternate %form-input:not(.form-alternate .form-default %form-input),
    %form-input.form-alternate {
      #{if($form-validated-class, ".#{$form-validated-class} ", "")}&:valid,
      &.#{$form-valid-class} {
        --#{$prefix}feedback-icon: #{svg-color($input-feedback-valid-icon, $input-alternate-success-assist-color)};
        @if $enable-dark-mode {
          [data-cx-theme="dark"] &:not([data-cx-theme="dark"] [data-cx-theme="light"] &) {
            --#{$prefix}feedback-icon: #{svg-color($input-feedback-valid-icon, $input-alternate-success-assist-color, true)};
          }
        }
      }
      #{if($form-validated-class, ".#{$form-validated-class} ", "")}&:invalid,
      &.#{$form-invalid-class} {
        --#{$prefix}feedback-icon: #{svg-color($input-feedback-invalid-icon, $input-alternate-error-assist-color)};
        @if $enable-dark-mode {
          [data-cx-theme="dark"] &:not([data-cx-theme="dark"] [data-cx-theme="light"] &) {
            --#{$prefix}feedback-icon: #{svg-color($input-feedback-invalid-icon, $input-alternate-error-assist-color, true)};
          }
        }
      }
    }
  }

}

.input-group {
  > .form-control:not(:focus),
  > .form-select:not(:focus),
  > .form-floating:not(:focus-within) {
    #{if($form-validated-class, ".#{$form-validated-class} ", "")}&:valid,
    &.#{$form-valid-class} {
      z-index: 3;
    }
    #{if($form-validated-class, ".#{$form-validated-class} ", "")}&:invalid,
    &.#{$form-invalid-class} {
      z-index: 4;
    }
  }
}
