//
// Floating Labels
//
// Floating labels provide an enhanced user experience by displaying input labels
// that float above the input field when it contains text or receives focus.
// This implementation provides consistent styling, transitions, and accessibility
// support across different form input types.
//
// Key features:
// - Support for text inputs, textareas, selects, and file inputs
// - Automatic label transition on focus and when content is present
// - State variations (idle, focus, disabled, validation states)
// - Browser autofill compatibility
// - Plaintext variant for read-only contexts
//

.form-floating {
  position: relative;
  border-bottom-width: $form-floating-border-width;

  // Base styling for form inputs within floating label context
  // Applies to standard inputs, plaintext inputs, and select elements
  > .form-input,
  > .form-input.plaintext,
  > .form-select {
    --#{$prefix}bg-color: var(--#{$prefix}form-idle-bg-floating);
    --#{$prefix}border-width: 0;
    height: $form-floating-min-height;
    min-height: $form-floating-min-height;
    line-height: $form-floating-line-height;
    border-bottom-width: $form-floating-border-width;
    @include border-top-radius($form-floating-border-radius-t);
    @include border-bottom-radius($form-floating-border-radius-b);

    &:focus {
      --#{$prefix}bg-color: var(--#{$prefix}form-focus-bg-floating);
    }

    // Disabled state styling
    &[disabled],
    &:disabled {
      --#{$prefix}bg-color: var(--#{$prefix}form-disabled-bg-floating);
    }

    // Valid state styling
    &:valid {
      --#{$prefix}bg-color: var(--#{$prefix}form-valid-bg-floating);
    }

    // Invalid state styling
    &:invalid {
      --#{$prefix}bg-color: var(--#{$prefix}form-invalid-bg-floating);
    }
  }

  // Label styling and positioning
  // The label element floats above the input when focused or filled
  > label {
    @extend %form-colors;
    position: absolute;
    top: 0;
    left: 0;
    z-index: 2;
    height: 100%; // Allow proper alignment with textareas
    padding: $form-floating-inactive-padding-y $form-floating-padding-x;
    overflow: hidden;
    color: var(--#{$prefix}label-color, var(--#{$prefix}form-idle-fg-inactive));
    text-align: start;
    text-overflow: ellipsis;
    white-space: nowrap;
    pointer-events: none; // Prevent accidental clicks on the label
    border: $form-regular-border-width solid transparent; // Required for aligning label's text with the input
    transform-origin: 0 0;
    @include transition($form-floating-transition);
  }

  // Text input and plaintext input specific styling
  > .form-input,
  > .form-input.plaintext {
    padding: $form-floating-inactive-padding-y $form-floating-padding-x;

    // Hide placeholder when the label is shown
    &::placeholder {
      color: transparent;
    }

    // Increase bottom border width on focus for better visual indication
    &:focus {
      border-bottom-width: $form-floating-border-width;
    }

    // Adjust padding when label is floating to ensure text doesn't overlap
    &:focus,
    &:not(:placeholder-shown) {
      padding-top: $form-floating-active-padding-t;
      padding-bottom: $form-floating-active-padding-b;
    }

    // Handle browser autofill state
    // Must be separate since :-webkit-autofill invalidates other selectors when grouped
    &:-webkit-autofill {
      padding-top: $form-floating-active-padding-t;
      padding-bottom: $form-floating-active-padding-b;
    }
  }

  // Focus state styling for the label
  > %form-input {
    &:focus ~ label {
      color: $form-focus-assist-color;
    }
  }

  // Select elements are always treated as having content
  > .form-select {
    padding: $form-floating-inactive-padding-y $form-floating-padding-x;
    padding-top: $form-floating-active-padding-t;
    padding-bottom: $form-floating-active-padding-b;
  }

  // Float label when input has content or focus
  // This covers all cases: focused inputs, filled inputs, plaintext, and selects
  > .form-input:focus,
  > .form-input:not(:placeholder-shown),
  > .form-input.plaintext,
  > .form-select {
    ~ label {
      transform: $form-floating-label-transform;

      // Create a background for the label to improve readability
      &::after {
        position: absolute;
        inset: $form-floating-inactive-padding-y (#{calc($form-floating-padding-x * .5)});
        z-index: -1;
        height: $form-floating-label-height;
        content: "";
        @include border-radius($form-medium-border-radius);
      }
    }
  }

  // File input styling
  // Customizes the file selector button to fit with the floating label design
  > .form-input[type="file"] {
    &::file-selector-button {
      padding-top: 0;
      padding-bottom: 0;
      @include font-size(var(--#{$prefix}font-size-small));
      @include line-height(var(--#{$prefix}line-height-small));
      font-weight: var(--#{$prefix}font-weight-strong);
      background: none;
      border-right: var(--#{$prefix}border-width-medium) solid var(--#{$prefix}border-color);
    }
    &:hover::file-selector-button {
      background-color: transparent;
    }
  }

  // Browser autofill handling for label positioning
  // Must be separate since :-webkit-autofill invalidates other selectors when grouped
  > .form-input:-webkit-autofill {
    ~ label {
      color: var(--#{$prefix}fg-main);
      transform: $form-floating-label-transform;
    }
  }

  // Plaintext input styling
  // For read-only/display contexts where the input should appear as regular text
  > .form-input.plaintext {
    background-color: inherit;
    ~ label {
      border-width: $form-regular-border-width 0; // Required to properly position label text
    }
  }

  // Disabled state styling for labels
  > :disabled ~ label,
  > .form-input:disabled ~ label { // Additional specificity required for form inputs
    color: $form-floating-label-disabled-fg-color;
  }
}
