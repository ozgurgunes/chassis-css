//
// General form controls (plus a few specific high-level interventions)
//

.form-control {
  @extend %component, %form-input;

  &[type="file"] {
    overflow: hidden; // prevent pseudo element button overlap

    &:not(:disabled):not([readonly]) {
      cursor: pointer;
    }
  }

  &::-webkit-date-and-time-value {
    // On Android Chrome, form-control's "width: 100%" makes the input width too small
    // Tested under Android 11 / Chrome 89, Android 12 / Chrome 100, Android 13 / Chrome 109
    //
    // On iOS Safari, form-control's "appearance: none" + "width: 100%" makes the input width too small
    // Tested under iOS 16.2 / Safari 16.2
    min-width: 5.5rem; // 85px; // Seems to be a good minimum safe width

    // Add some height to date inputs on iOS
    // https://github.com/twbs/bootstrap/issues/23307
    // TODO: we can remove this workaround once https://bugs.webkit.org/show_bug.cgi?id=198959 is resolved
    // Multiply line-height by 1em if it has no unit
    $line-height: map-get($input-medium-text-font, "line-height");
    // height: if(unit($line-height) == "", #{calc($line-hexight * 1em)}, $line-height);

    // Android Chrome type="date" is taller than the other inputs
    // because of "margin: 1px 24px 1px 4px" inside the shadow DOM
    // Tested under Android 11 / Chrome 89, Android 12 / Chrome 100, Android 13 / Chrome 109
    margin: 0;
  }

  // Prevent excessive date input height in Webkit
  // https://github.com/twbs/bootstrap/issues/34433
  &::-webkit-datetime-edit {
    display: block;
    padding: 0;
  }

  // Placeholder
  &::placeholder {
    color: var(--#{$prefix}input-idle-fg-inactive);
    // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526.
    opacity: 1;
  }

  // File input buttons theming
  &::file-selector-button {
    --#{$prefix}input-fg-color: var(--#{$prefix}file-button-fg-color);
    --#{$prefix}input-bg-color: var(--#{$prefix}file-button-bg-color);
    --#{$prefix}input-border-color: inherit;
    --#{$prefix}input-border-width: 0;

    margin: #{calc(-1 * var(--#{$prefix}padding-y))} #{calc(-1 * var(--#{$prefix}padding-x))};
    margin-inline-end: var(--#{$prefix}padding-x);
    @include padding();
    @include gradient-bg(var(--#{$prefix}file-button-bg-color));
    pointer-events: none;
    border-inline-end-width: var(--#{$prefix}border-width);
    @include border-radius(0);
    @include transition($button-transition);

    @extend %component;
  }

  &:hover:not(:disabled):not([readonly])::file-selector-button {
    background-color: var(--#{$prefix}file-button-bg-hover);
  }

  // Readonly controls as plain text
  //
  // Apply class to a readonly input to make it appear like regular plain
  // text (without any border, background color, focus indicator)

  &.plaintext {
    --#{$prefix}padding-x: 0;
    --#{$prefix}fg-color: #{$form-input-plaintext-color};
    --#{$prefix}bg-color: transparent;
    --#{$prefix}border-width: 0;
    --#{$prefix}border-color: transparent;
    --#{$prefix}border-radius: 0;

    display: block;
    @include padding();
    margin-bottom: 0; // match inputs if this class comes on inputs with default margins
    box-shadow: none;

    &:focus {
      outline: 0;
    }
  }

  &.color-control {
    width: var(--#{$prefix}input-color-width, var(--#{$prefix}min-height));
    height: var(--#{$prefix}input-color-height, var(--#{$prefix}min-height));
    padding: var(--#{$prefix}input-color-padding, var(--#{$prefix}padding-y));

    &:not(:disabled):not([readonly]) {
      cursor: pointer;
    }

    &::-moz-color-swatch {
      border: 0 !important; // stylelint-disable-line declaration-no-important
      @include border-radius(var(--#{$prefix}border-radius));
    }

    &::-webkit-color-swatch {
      border: 0 !important; // stylelint-disable-line declaration-no-important
      @include border-radius(var(--#{$prefix}border-radius));
    }
  }

}

// Make sure textareas don't shrink too much when resized
// https://github.com/twbs/bootstrap/pull/29124
// stylelint-disable selector-no-qualifying-type
textarea {
  &.form-control {
    min-height: var(--#{$prefix}min-height);
  }
}
// stylelint-enable selector-no-qualifying-type
