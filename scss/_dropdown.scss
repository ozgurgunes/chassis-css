// The dropdown wrapper (`<div>`)
.dropup,
.dropend,
.dropdown,
.dropstart,
.dropup-center,
.dropdown-center {
  position: relative;
}

.dropdown-toggle {
  white-space: nowrap;

  // Generate the caret automatically
  @include caret();
}

// The dropdown menu
.dropdown-menu {

  @extend %component;

  --#{$prefix}zindex: var(--#{$prefix}dropdown-zindex, #{$zindex-dropdown});
  --#{$prefix}min-width: var(--#{$prefix}dropdown-min-width, #{$dropdown-min-width});
  --#{$prefix}padding-y: var(--#{$prefix}dropdown-padding-y, #{$dropdown-padding-y});
  --#{$prefix}padding-x: var(--#{$prefix}dropdown-padding-x, #{$dropdown-padding-x});
  --#{$prefix}spacer: var(--#{$prefix}dropdown-spacer, #{$dropdown-spacer});
  --#{$prefix}font-size: var(--#{$prefix}dropdown-font-size, #{$dropdown-font-size});
  --#{$prefix}line-height: var(--#{$prefix}dropdown-line-height, #{$dropdown-line-height});
  --#{$prefix}fg-color: var(--#{$prefix}dropdown-fg-color, #{$dropdown-fg-color});
  --#{$prefix}bg-color: var(--#{$prefix}dropdown-bg-color, #{$dropdown-bg-color});
  --#{$prefix}border-color: var(--#{$prefix}dropdown-border-color, #{$dropdown-border-color});
  --#{$prefix}border-radius: var(--#{$prefix}dropdown-border-radius, #{$dropdown-border-radius});
  --#{$prefix}border-width: var(--#{$prefix}dropdown-border-width, #{$dropdown-border-width});
  --#{$prefix}box-radius: var(--#{$prefix}dropdown-box-radius, #{$dropdown-box-radius});
  --#{$prefix}separator-color: var(--#{$prefix}dropdown-separator-color, #{$dropdown-separator-color});
  --#{$prefix}separator-margin: var(--#{$prefix}dropdown-separator-margin, #{$dropdown-separator-margin});
  --#{$prefix}box-shadow: var(--#{$prefix}dropdown-box-shadow, #{$dropdown-box-shadow});
  --#{$prefix}link-fg-color: var(--#{$prefix}dropdown-link-fg-color, #{$dropdown-link-fg-color});
  --#{$prefix}link-hover-fg-color: var(--#{$prefix}dropdown-link-hover-fg-color, #{$dropdown-link-hover-fg-color});
  --#{$prefix}link-hover-bg-color: var(--#{$prefix}dropdown-link-hover-bg-color, #{$dropdown-link-hover-bg-color});
  --#{$prefix}link-active-fg-color: var(--#{$prefix}dropdown-link-active-fg-color, #{$dropdown-link-active-fg-color});
  --#{$prefix}link-active-bg-color: var(--#{$prefix}dropdown-link-active-bg-color, #{$dropdown-link-active-bg-color});
  --#{$prefix}link-disabled-fg-color: var(--#{$prefix}dropdown-link-disabked-fg-color, #{$dropdown-link-disabled-fg-color});
  --#{$prefix}item-padding-y: var(--#{$prefix}dropdown-item-padding-y, #{$dropdown-item-padding-y});
  --#{$prefix}item-padding-x: var(--#{$prefix}dropdown-item-padding-x, #{$dropdown-item-padding-x});
  --#{$prefix}item-border-radius: var(--#{$prefix}dropdown-item-border-radius, #{$dropdown-item-border-radius});
  --#{$prefix}header-fg-color: var(--#{$prefix}dropdown-header-fg-color, #{$dropdown-header-fg-color});
  --#{$prefix}header-padding-y: var(--#{$prefix}dropdown-header-padding-y, #{$dropdown-header-padding-y});
  --#{$prefix}header-padding-x: var(--#{$prefix}dropdown-header-padding-x, #{$dropdown-header-padding-x});

  position: absolute;
  z-index: var(--#{$prefix}zindex);
  display: none; // none by default, but block on "open" of the menu
  min-width: var(--#{$prefix}min-width);
  padding: var(--#{$prefix}padding-y) var(--#{$prefix}padding-x);
  margin: 0; // Override default margin of ul
  text-align: left; // Ensures proper alignment if parent has it changed (e.g., modal footer)
  list-style: none;
  background-clip: padding-box;
  @include box-shadow(var(--#{$prefix}box-shadow));

  &[data-cx-popper] {
    top: 100%;
    left: 0;
    margin-top: var(--#{$prefix}spacer);
  }

  @if $dropdown-padding-y == 0 {
    > .dropdown-item:first-child,
    > li:first-child .dropdown-item {
      @include border-top-radius(var(--#{$prefix}box-radius));
    }
    > .dropdown-item:last-child,
    > li:last-child .dropdown-item {
      @include border-bottom-radius(var(--#{$prefix}box-radius));
    }

  }
}

// scss-docs-start responsive-breakpoints
// We deliberately hardcode the `cx-` prefix because we check
// this custom property in JS to determine Popper's positioning

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    .dropdown-menu#{$infix}-start {
      --cx-position: start;

      &[data-cx-popper] {
        right: auto;
        left: 0;
      }
    }

    .dropdown-menu#{$infix}-end {
      --cx-position: end;

      &[data-cx-popper] {
        right: 0;
        left: auto;
      }
    }
  }
}
// scss-docs-end responsive-breakpoints

// Allow for dropdowns to go bottom up (aka, dropup-menu)
// Just add .dropup after the standard .dropdown class and you're set.
.dropup {
  .dropdown-menu[data-cx-popper] {
    top: auto;
    bottom: 100%;
    margin-top: 0;
    margin-bottom: var(--#{$prefix}spacer);
  }

  .dropdown-toggle {
    @include caret(up);
  }
}

.dropend {
  .dropdown-menu[data-cx-popper] {
    top: 0;
    right: auto;
    left: 100%;
    margin-top: 0;
    margin-left: var(--#{$prefix}spacer);
  }

  .dropdown-toggle {
    @include caret(end);
    &::after {
      vertical-align: 0;
    }
  }
}

.dropstart {
  .dropdown-menu[data-cx-popper] {
    top: 0;
    right: 100%;
    left: auto;
    margin-top: 0;
    margin-right: var(--#{$prefix}spacer);
  }

  .dropdown-toggle {
    @include caret(start);
    &::before {
      vertical-align: 0;
    }
  }
}


// Dividers (basically an `<hr>`) within the dropdown
.dropdown-separator {
  height: 0;
  margin: var(--#{$prefix}separator-margin) 0;
  overflow: hidden;
  border-top: 1px solid var(--#{$prefix}separator-color);
  opacity: 1; // Revisit in v6 to de-dupe styles that conflict with <hr> element
}

// Links, buttons, and more within the dropdown menu
//
// `<button>`-specific styles are denoted with `// For <button>s`
.dropdown-item {
  display: block;
  width: 100%; // For `<button>`s
  padding: var(--#{$prefix}item-padding-y) var(--#{$prefix}item-padding-x);
  clear: both;
  font-weight: $font-weight-normal;
  color: var(--#{$prefix}link-fg-color);
  text-align: inherit; // For `<button>`s
  text-decoration: if($link-decoration == none, null, none);
  white-space: nowrap; // prevent links from randomly breaking onto new lines
  background-color: transparent; // For `<button>`s
  border: 0; // For `<button>`s
  @include border-radius(var(--#{$prefix}item-border-radius, var(--#{$prefix}border-radius-small)));

  &:hover,
  &:focus {
    color: var(--#{$prefix}link-hover-fg-color);
    text-decoration: if($link-hover-decoration == underline, none, null);
    @include gradient-bg(var(--#{$prefix}link-hover-bg-color));
  }

  &.active,
  &:active {
    color: var(--#{$prefix}link-active-fg-color);
    text-decoration: none;
    @include gradient-bg(var(--#{$prefix}link-active-bg-color));
  }

  &.disabled,
  &:disabled {
    color: var(--#{$prefix}link-disabled-fg-color);
    pointer-events: none;
    background-color: transparent;
    // Remove CSS gradients if they're enabled
    background-image: if($enable-component-gradients, none, null);
  }
}

.dropdown-menu.show {
  display: block;
}

// Dropdown section headers
.dropdown-header {
  display: block;
  padding: var(--#{$prefix}header-padding-y) var(--#{$prefix}header-padding-x);
  margin-bottom: 0; // for use with heading elements
  @include font-size($font-size-smaller);
  @include line-height();
  color: var(--#{$prefix}header-fg-color);
  white-space: nowrap; // as with > li > a
}

// Dropdown text
.dropdown-item-text {
  display: block;
  padding: var(--#{$prefix}item-padding-y) var(--#{$prefix}item-padding-x);
  color: var(--#{$prefix}link-fg-color);
}
